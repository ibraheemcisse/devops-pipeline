name: Python app CI/CD with Docker

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ibraheemcisse/my-app

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        cd my-app
        python -m pip install --upgrade pip
        pip install flask pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run tests
      run: |
        cd my-app
        # Add your test commands here
        python -m pytest tests/ || echo "No tests found"
        # You can also run a simple Flask app test
        python -c "import main; print('Flask app imports successfully')" || echo "No main.py or import issues"

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Debug - List project structure
      run: |
        echo "=== Project Structure ==="
        find . -type f -name "*.py" -o -name "Dockerfile" -o -name "*.txt" | head -20
        echo "=== Root directory ==="
        ls -la
        echo "=== My-app directory ==="
        ls -la my-app/ || echo "My-app directory not found"
        echo "=== Dockerfile content ==="
        cat my-app/Dockerfile || echo "Dockerfile not found in my-app/"
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./my-app
        file: ./my-app/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Image digest
      run: echo ${{ steps.meta.outputs.digest }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        cd my-app
        echo "Add your deployment steps here"
        # Example: kubectl apply -f k8s/production/
        # Or run your deploy script: ./scripts/deploy.sh
        # Make scripts executable first: chmod +x scripts/deploy.sh
